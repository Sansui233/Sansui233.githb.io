{"pageProps":{"meta":{"title":"","date":"","tags":[],"categories":""},"mdxcode":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    h2: \"h2\",\n    li: \"li\",\n    p: \"p\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"不知不觉维护 logseq 的主题有三年了？这期间一直在用。现在想法是界面设计要考虑的东西真的挺多的，而且不同的着手点之间会相互影响，在功能性与美观上常常牵涉到平衡的问题。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"这里总结一下写主题、平面设计需要考虑的一些点。\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"第一原则\",\n      children: \"第一原则\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"使用场景，使用场景，使用场景。\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"因为非常重要所以说了三遍。做任何实用优先设计永远以使用场景优先。再去考虑美观的问题。如果实在想不出使用场景的，可以先考虑外观，或者看看别人的设计是怎么做的，之后想到使用场景后再修改。\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"布局\",\n      children: \"布局\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"通常而言，同一类成熟的产品布局会有相似的布局。比如：博客常见的是 \", _jsx(_components.a, {\n        href: \"https://theme-next.js.org/\",\n        children: \"NexT - Theme for Hexo\"\n      }), \" 的三种布局；短视频是抖音带起来的布局；论坛则类似 discuz 或 \", _jsx(_components.a, {\n        href: \"https://flarum.org/\",\n        children: \"flarum\"\n      }), \"；音乐播放器也是大同小异；现代 3D 建模软件软件似乎就应该长 \", _jsx(_components.a, {\n        href: \"https://www.blender.org/\",\n        children: \"Blender\"\n      }), \" 那样，即便是用纯 web 前端技术写的 \", _jsx(_components.a, {\n        href: \"https://github.com/JannisX11/blockbench\",\n        children: \"blockbench\"\n      }), \"。在线表格与文档的布局则是 word 简化而来。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"布局同质化的优点十分明显：\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"久经优化的用户体验，操作上较为统一\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"快速建立起属于“某一类产品”的第一印象\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"当然也有缺点：\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"不能很好地契合自身软件的特色（特别的使用场景）\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"在如今的情况下，各种成熟产品功能基本靠抄，布局上可以改动的地方着实没有从前那样多了。但并非不能做大的改动，相反，如果觉得当前的产品有任何操作上难用的地方，都有改进的可能。比如 figma 极大简化了 AI 设计网页与App的操作，在平面设计方面一骑绝尘。flarum 则完全不同于 discuz， 抛弃了 discuz 过于繁杂热闹的导航与积分机制。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"但这需要非常系统地对产品的使用场景进行思考与归类，也与当下人们的流行趋势、生活习惯息息相关。在小红书上，emoji 排版非常流行，但你无法让一个从不用 emoji 的人给输入法加上 emoji 联想，他只会认为，这是在扰乱正常打字的词库。\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"如果是不成熟的产品赛道，没有可参考方案，请多考虑\", _jsx(_components.strong, {\n        children: \"使用场景\"\n      }), \"。\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"排版\",\n      children: \"排版\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.strong, {\n          children: \"使用场景\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"指标：统一性与差异性\",\n      children: \"指标：统一性与差异性\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"指标：覆盖率\",\n      children: \"指标：覆盖率\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerpt":"不知不觉维护 logseq 的主题有三年了？这期间一直在用。现在想法是界面设计要考虑的东西真的挺多的，而且不同的着手点之间会相互影响，在功能性与美观上常常牵涉到平衡的问题。  这里总结一下写主题、平面设计需要考虑的一些点。  ## 第一原则  **使用场景，使用场景，使用场景。**  因","prevPost":{"title":"Welcome to sansui's blog","link":"/posts/welcome"},"nextPost":null,"headings":[{"title":"第一原则","rank":1,"id":"第一原则"},{"title":"布局","rank":1,"id":"布局"},{"title":"排版","rank":1,"id":"排版"},{"title":"指标：统一性与差异性","rank":1,"id":"指标：统一性与差异性"},{"title":"指标：覆盖率","rank":1,"id":"指标：覆盖率"}]},"__N_SSG":true}