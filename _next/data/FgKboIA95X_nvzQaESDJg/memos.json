{"pageProps":{"client":"static","source":[{"id":"2024-11-01 17:42:59","content":"\n真切感受到 App 各自圈地带来的影响是，有个妹妹问 ps 穿透模式有什么作用，说换了八个关键词都没有搜到。我有点震惊。然后搜了一下百度……确实搜不到！唯一有用的靠前的还是个 抖 的长视频，看一眼就可以明白的东西用视频讲了 9 分钟…… \n\n然后换了小红书搜，虽然相关内容不多，但第一条就是。\n\n然后换了 bing 搜，也是第一条就有，adobe 的官网，但可惜她打不开。csp 台湾地区 tips 也非常详细，但可惜她打不开。国内优动漫的运营做的说明其实也很详细了，但在百度的 seo 排名非常之低，完全搜不到 ，用 bing 倒是排在第一个。 \n\n好烂的信息茧房。\n\n---\n\n小心小心，不要再被骗啦！感觉我心态蛮不对的，因为不相信有什么天上掉馅饼的事，所以收到所有陌生人的私信反应都是怕被骗，这样反过来也是拒绝掉了很多东西，但其实只是我怕被骗而已。毕竟过去五年天天被发拐骗新闻……还是做不到非常人格独立，某人说她发她的你当没听到，真的不太可能。我现在只能听到但不管，但要说不对心理产生影响……可能只有到没有亲密关系的那天。\n\n","tags":[],"imgsmd":[],"sourceFile":"003.md","csrIndex":[0,0],"code":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    hr: \"hr\",\n    p: \"p\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"真切感受到 App 各自圈地带来的影响是，有个妹妹问 ps 穿透模式有什么作用，说换了八个关键词都没有搜到。我有点震惊。然后搜了一下百度……确实搜不到！唯一有用的靠前的还是个 抖 的长视频，看一眼就可以明白的东西用视频讲了 9 分钟……\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"然后换了小红书搜，虽然相关内容不多，但第一条就是。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"然后换了 bing 搜，也是第一条就有，adobe 的官网，但可惜她打不开。csp 台湾地区 tips 也非常详细，但可惜她打不开。国内优动漫的运营做的说明其实也很详细了，但在百度的 seo 排名非常之低，完全搜不到 ，用 bing 倒是排在第一个。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"好烂的信息茧房。\"\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.p, {\n      children: \"小心小心，不要再被骗啦！感觉我心态蛮不对的，因为不相信有什么天上掉馅饼的事，所以收到所有陌生人的私信反应都是怕被骗，这样反过来也是拒绝掉了很多东西，但其实只是我怕被骗而已。毕竟过去五年天天被发拐骗新闻……还是做不到非常人格独立，某人说她发她的你当没听到，真的不太可能。我现在只能听到但不管，但要说不对心理产生影响……可能只有到没有亲密关系的那天。\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","length":467},{"id":" 2024-10-18 00:38:10","content":"\n华强北的小作坊便携显示器坏了，于是换了 ipad moonlight 串流。屏幕感觉太舒服了感动。Apple 的屏幕能莫名觉得很稳定。PC 再好的屏幕都还是会有一种刺眼的感觉，换个角度的观感就不一样。\n\n","tags":[],"imgsmd":[],"sourceFile":"003.md","csrIndex":[0,1],"code":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"华强北的小作坊便携显示器坏了，于是换了 ipad moonlight 串流。屏幕感觉太舒服了感动。Apple 的屏幕能莫名觉得很稳定。PC 再好的屏幕都还是会有一种刺眼的感觉，换个角度的观感就不一样。\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","length":103},{"id":"2024-10-16 18:36:24","content":"\n#博客 对了哦，这个页面的无限滚动的框重做了，其实是参考的 Thread。但做的时候发现一个问题……头顶那两个圆角很难做！因为无限滚动是使用 transform3d 定位的，然后就会新建一个图层。众所周知，新建图层的 方形 background 会覆盖父级容器……\n\n然后我想那是不是 first-child 就可以了呢？然后发现我的 virtual list 实现是每个 list item 外面都套了一圈 div，当时的原因是 ref 传不了函数式组件，但我又需要在父级使用 ref，因为我这个无限滚动容器大概是做了个除了微博以外的平台都没有做的 feature —— 可变高度（微博的那个可变高度还有 bug 草，收起时状态没有同步）\n\n然后我可能会想 virtual list div 上去写样式不就好了吗？不行不行，我的 virtual list 设计是通用组件，不能带样式，样式应该由外部决定。\n\nThread 的解决方案是，绝对定位单独画了两个角……是的，你没有听错，那两个圆角甚至是两个单独的图层……我不想这么做。\n\n我想不能在组件接口上开个口， style 传给内部吗？哒咩，一个组件的参数既有 container 的样式，和 item list 的样式，感觉就是很混乱。而且样式又分 style 和 classname。这个组件只有两个层级还好，只用暴露四个样式接口，但要是那种很多层的，不能也设计这么多样式接口吧！这是个原则性问题，絶対無理！\n\n最后解决方法其实非常简单但开始时没有想到，那就是 在父级总节点加了 class，用最原始的， css 的，“>”…………\n\n","tags":["博客"],"imgsmd":[],"sourceFile":"003.md","csrIndex":[0,2],"code":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  }, {Tag} = _components;\n  if (!Tag) _missingMdxReference(\"Tag\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [_jsx(Tag, {\n        text: \"博客\"\n      }), \" 对了哦，这个页面的无限滚动的框重做了，其实是参考的 Thread。但做的时候发现一个问题……头顶那两个圆角很难做！因为无限滚动是使用 transform3d 定位的，然后就会新建一个图层。众所周知，新建图层的 方形 background 会覆盖父级容器……\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"然后我想那是不是 first-child 就可以了呢？然后发现我的 virtual list 实现是每个 list item 外面都套了一圈 div，当时的原因是 ref 传不了函数式组件，但我又需要在父级使用 ref，因为我这个无限滚动容器大概是做了个除了微博以外的平台都没有做的 feature —— 可变高度（微博的那个可变高度还有 bug 草，收起时状态没有同步）\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"然后我可能会想 virtual list div 上去写样式不就好了吗？不行不行，我的 virtual list 设计是通用组件，不能带样式，样式应该由外部决定。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Thread 的解决方案是，绝对定位单独画了两个角……是的，你没有听错，那两个圆角甚至是两个单独的图层……我不想这么做。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"我想不能在组件接口上开个口， style 传给内部吗？哒咩，一个组件的参数既有 container 的样式，和 item list 的样式，感觉就是很混乱。而且样式又分 style 和 classname。这个组件只有两个层级还好，只用暴露四个样式接口，但要是那种很多层的，不能也设计这么多样式接口吧！这是个原则性问题，絶対無理！\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"最后解决方法其实非常简单但开始时没有想到，那就是 在父级总节点加了 class，用最原始的， css 的，“>”…………\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","length":697},{"id":"2024-10-14 16:41:32","content":"\nsvg 动画，好，好好好，太适合关键帧了，k 帧 k 下来一个 transform 自动插值。所以重点在，触发和交互如何 k 帧……\n\n另外就是 tailwind css…… 我真的不知道有什么好的啊啊啊！至少开发体验极差，因为逻辑被淹没在样式里，要修改时根本定位不到代码。你猜最开始的人为什么就把 html，css 和 js 分开写……从这个角度来说 vue 比较正常，react 这种 html 和 js 混合的确实是接受了好一阵子……但其实 JSX 里混得也不太多，大部分还是分开的。 tailwind 混合的太离谱了……是不用 writing css，因为本质上是重新定义了css……可能还是我用 css 太习惯了。styled-component 还是香的。\n\n另外小火箭真的卡得不行，最近已经卡到怀疑人生了。换成了 sing box 好，好了！ singbox 手机上还挺直观好的，电脑上没 PC 端。GUI for singbox 真的很不直观，界面层级藏得太深了草，用看起来根本不像是能点的文字藏了我最关键的配置信息，逆天交互草……这之前我一直以为这软件的界面只有两个层级。\n\n","tags":[],"imgsmd":[],"sourceFile":"003.md","csrIndex":[0,3],"code":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"svg 动画，好，好好好，太适合关键帧了，k 帧 k 下来一个 transform 自动插值。所以重点在，触发和交互如何 k 帧……\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"另外就是 tailwind css…… 我真的不知道有什么好的啊啊啊！至少开发体验极差，因为逻辑被淹没在样式里，要修改时根本定位不到代码。你猜最开始的人为什么就把 html，css 和 js 分开写……从这个角度来说 vue 比较正常，react 这种 html 和 js 混合的确实是接受了好一阵子……但其实 JSX 里混得也不太多，大部分还是分开的。 tailwind 混合的太离谱了……是不用 writing css，因为本质上是重新定义了css……可能还是我用 css 太习惯了。styled-component 还是香的。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"另外小火箭真的卡得不行，最近已经卡到怀疑人生了。换成了 sing box 好，好了！ singbox 手机上还挺直观好的，电脑上没 PC 端。GUI for singbox 真的很不直观，界面层级藏得太深了草，用看起来根本不像是能点的文字藏了我最关键的配置信息，逆天交互草……这之前我一直以为这软件的界面只有两个层级。\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","length":498},{"id":"2024-09-15 05:22:27","content":"\n望着一年前写的类型推断发呆……这他妈是我能写出来的东西？好牛逼，怎么写的，看一眼。\n\n是的如果 API 没有强健的类型检查我会死，只记得当时写得要死要活的感觉在手搓框架……\n\n","tags":[],"imgsmd":[],"sourceFile":"003.md","csrIndex":[0,4],"code":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"望着一年前写的类型推断发呆……这他妈是我能写出来的东西？好牛逼，怎么写的，看一眼。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"是的如果 API 没有强健的类型检查我会死，只记得当时写得要死要活的感觉在手搓框架……\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","length":89},{"id":"2024-09-10 19:07:59","content":"\n- [从一道让我失眠的 Promise 面试题开始，深入分析 Promise](https://juejin.cn/post/6945319439772434469)\n\n我又在看手写 Promise，这个题也让我失眠……文章写得非常非常好。\n\n到最后看到评论：wtf?? 竟然是引擎优化导致的，不是我对 Promise 机制理解有误……\n\n有的评论强行说 Promise.resolve return 是两次微任务，不是 Promise 构造时被丢到微任务队列，而是 Promise 被 resolve 后，then 方法里的代码被丢到微任务队列。服了，谁会把构造函数扔队列……我也理解错了好久，Promise 构造是同步代码，但里面会有异步代码，then 进入队列时并不是在 Promise 构造时的那轮事件循环里。\n\n","tags":[],"imgsmd":[],"sourceFile":"003.md","csrIndex":[0,5],"code":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    li: \"li\",\n    p: \"p\",\n    ul: \"ul\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://juejin.cn/post/6945319439772434469\",\n          children: \"从一道让我失眠的 Promise 面试题开始，深入分析 Promise\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"我又在看手写 Promise，这个题也让我失眠……文章写得非常非常好。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"到最后看到评论：wtf?? 竟然是引擎优化导致的，不是我对 Promise 机制理解有误……\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"有的评论强行说 Promise.resolve return 是两次微任务，不是 Promise 构造时被丢到微任务队列，而是 Promise 被 resolve 后，then 方法里的代码被丢到微任务队列。服了，谁会把构造函数扔队列……我也理解错了好久，Promise 构造是同步代码，但里面会有异步代码，then 进入队列时并不是在 Promise 构造时的那轮事件循环里。\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","length":362},{"id":"2024-09-07 20:46:22","content":"\n去朋友家帮忙搬家一天……对方已经搬得腰肌劳损了。我去就是想进行一些体力劳动，实在是久坐不住。搬家师傅竟然是广告行业的，周末出来兼职搬家……可恶，我也想做些带体力的工作，不是很想整天对着屏幕的这个小框框了，想动，想看看别的地方。\n\n\n","tags":[],"imgsmd":["![](https://img-cf.sansui233.com/imgs/2024/09/202409072058010.webp)"],"sourceFile":"003.md","csrIndex":[0,6],"code":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"去朋友家帮忙搬家一天……对方已经搬得腰肌劳损了。我去就是想进行一些体力劳动，实在是久坐不住。搬家师傅竟然是广告行业的，周末出来兼职搬家……可恶，我也想做些带体力的工作，不是很想整天对着屏幕的这个小框框了，想动，想看看别的地方。\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","length":117},{"id":"2024-09-03 09:31:00","content":"\n看到一个交互的仓库：[veloxijs.com](https://veloxijs.com/)。瞪大了眼睛……其实 react-spring 做动画也好用但缺交互事件，交互要额外绑。而我觉得其实绑交互才是最麻烦，多平台有区分，还要干掉一些和原生交互冲突的问题……我在那手撮交互和动画算什么！！不过一看打包体积 50 多k，那还是手搓吧，按需手撮 5k 不到……\n\n","tags":[],"imgsmd":[],"sourceFile":"003.md","csrIndex":[0,7],"code":"\"use strict\";\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    p: \"p\",\n    ...props.components\n  };\n  return _jsxs(_components.p, {\n    children: [\"看到一个交互的仓库：\", _jsx(_components.a, {\n      href: \"https://veloxijs.com/\",\n      children: \"veloxijs.com\"\n    }), \"。瞪大了眼睛……其实 react-spring 做动画也好用但缺交互事件，交互要额外绑。而我觉得其实绑交互才是最麻烦，多平台有区分，还要干掉一些和原生交互冲突的问题……我在那手撮交互和动画算什么！！不过一看打包体积 50 多k，那还是手搓吧，按需手撮 5k 不到……\"]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","length":183},{"id":"2024-08-26 10:48:17","content":"\n推荐短篇漫画[小狐狸化形记](https://weibo.com/5790748645/Otq6Td0Jm)。在作品要么连篇累牍的设定与废话，要么网文快节奏模板的时代，已经感觉已经好久好久，没有看过这样能写进教科书一般的，剧本了。\n\n二游的剧情其实我都看不太进去，大概就 fgo 2.6 还行，1.6 已经不记得了……然后原里枫丹审判看得还行，没有逻辑 bug 已经万幸了，要有代入感就算了。二游太注重打造异世界和卖角色了，但**代入感反而是要能映射现实才会有**…支线有不少抄名著的但抄得很生硬，反应人性不是故意写脑子有病的家庭啊喂。\n\n枫丹把矛盾归结在了“天理”上，为了解决“天理”的问题而选择牺牲自己，算是非常讨巧的做法，这是一种“虚构的矛盾”，虽然不符合现实但是非常符合异世界卖角色的二游。\n\n崩铁 2.3匹诺康尼大立意很好，但小分段上也还是在卖异世界社达体验，观感上最好的是只为剧情服务的星期日……他出场不多（物理）却有非常多真实的侧写，一是和妹妹的互动，二是有领导压力和家族派系之间的压力，三是有真实的动机——想人们能快乐摸鱼。这些和异世界结合也没有违和感。大部分角色做好一个点就不错了，砂金做好童年创伤就大卖特卖…说到底还是大部分二游角色过于扁平，没有现实的复杂度支撑不住。\n\n然后这也可以解释崩铁垃圾桶会塑造得很成功。首先主角独特的捡垃圾 xp 就逆天，其次“垃圾”这词在当代象征了太多。垃圾除了能指人，还有十连抽出“金色传说垃圾”嘲讽了抽卡。垃圾桶的外形和战斗机制也足够搞笑……符号比角色好出效果可太真实了。\n\n然后说回 fgo 2.6，厉害的点就在于每个人都是活的，矛盾和动机是真实且鲜明的“人之间的故事”（指抽象的人）。明明都是异世界卖角色，蘑菇怎么写出来的……可能是 fgo 最不需要的就是沉浸感吧……对于看剧情的玩家，只要脱离沉浸感，纯写剧情反而结果会好…\n\n古剑三也挺好的，很明显这也是不用代入主角的游戏，有沉浸感大概是本土文化滤镜吧。玩基于西方神话种族体系的就不行，代不了。\n\n","tags":[],"imgsmd":[],"sourceFile":"003.md","csrIndex":[0,8],"code":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    p: \"p\",\n    strong: \"strong\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"推荐短篇漫画\", _jsx(_components.a, {\n        href: \"https://weibo.com/5790748645/Otq6Td0Jm\",\n        children: \"小狐狸化形记\"\n      }), \"。在作品要么连篇累牍的设定与废话，要么网文快节奏模板的时代，已经感觉已经好久好久，没有看过这样能写进教科书一般的，剧本了。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"二游的剧情其实我都看不太进去，大概就 fgo 2.6 还行，1.6 已经不记得了……然后原里枫丹审判看得还行，没有逻辑 bug 已经万幸了，要有代入感就算了。二游太注重打造异世界和卖角色了，但\", _jsx(_components.strong, {\n        children: \"代入感反而是要能映射现实才会有\"\n      }), \"…支线有不少抄名著的但抄得很生硬，反应人性不是故意写脑子有病的家庭啊喂。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"枫丹把矛盾归结在了“天理”上，为了解决“天理”的问题而选择牺牲自己，算是非常讨巧的做法，这是一种“虚构的矛盾”，虽然不符合现实但是非常符合异世界卖角色的二游。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"崩铁 2.3匹诺康尼大立意很好，但小分段上也还是在卖异世界社达体验，观感上最好的是只为剧情服务的星期日……他出场不多（物理）却有非常多真实的侧写，一是和妹妹的互动，二是有领导压力和家族派系之间的压力，三是有真实的动机——想人们能快乐摸鱼。这些和异世界结合也没有违和感。大部分角色做好一个点就不错了，砂金做好童年创伤就大卖特卖…说到底还是大部分二游角色过于扁平，没有现实的复杂度支撑不住。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"然后这也可以解释崩铁垃圾桶会塑造得很成功。首先主角独特的捡垃圾 xp 就逆天，其次“垃圾”这词在当代象征了太多。垃圾除了能指人，还有十连抽出“金色传说垃圾”嘲讽了抽卡。垃圾桶的外形和战斗机制也足够搞笑……符号比角色好出效果可太真实了。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"然后说回 fgo 2.6，厉害的点就在于每个人都是活的，矛盾和动机是真实且鲜明的“人之间的故事”（指抽象的人）。明明都是异世界卖角色，蘑菇怎么写出来的……可能是 fgo 最不需要的就是沉浸感吧……对于看剧情的玩家，只要脱离沉浸感，纯写剧情反而结果会好…\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"古剑三也挺好的，很明显这也是不用代入主角的游戏，有沉浸感大概是本土文化滤镜吧。玩基于西方神话种族体系的就不行，代不了。\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","length":855},{"id":"2024-08-23 10:48:53","content":"\n屏幕调白平衡的软件 https://justgetflux.com/ ，才发现我最适应的色温大概在 5700k。标准的 6500K sRGB 对我来说太刺眼了，看不了太长时间的蓝光+高饱和……\n\n","tags":[],"imgsmd":[],"sourceFile":"003.md","csrIndex":[0,9],"code":"\"use strict\";\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    p: \"p\",\n    ...props.components\n  };\n  return _jsxs(_components.p, {\n    children: [\"屏幕调白平衡的软件 \", _jsx(_components.a, {\n      href: \"https://justgetflux.com/\",\n      children: \"https://justgetflux.com/\"\n    }), \" ，才发现我最适应的色温大概在 5700k。标准的 6500K sRGB 对我来说太刺眼了，看不了太长时间的蓝光+高饱和……\"]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","length":99}],"info":{"pages":21,"memos":216,"tags":10,"imgs":18,"fileMap":[{"srcName":"003.md","lastModified":1730454885266,"dateRange":{"start":"2024-11-01 17:42","end":"2024-01-01 00:00"},"startAt":{"page":0,"index":0},"endAt":{"page":5,"index":4}},{"srcName":"002.md","lastModified":1704142441953,"dateRange":{"start":"2023-12-30 01:38","end":"2023-08-21 08:00"},"startAt":{"page":5,"index":5},"endAt":{"page":12,"index":1}},{"srcName":"001.md","lastModified":1708185575449,"dateRange":{"start":"2023-03-17 08:00","end":"2019-07-16 08:00"},"startAt":{"page":12,"index":2},"endAt":{"page":21,"index":4}},{"srcName":"000.md","lastModified":1704112748054,"dateRange":{"start":"1980-01-01 00:48","end":"1980-01-01 00:48"},"startAt":{"page":21,"index":5},"endAt":{"page":21,"index":5}}],"pageMap":[{"page":0,"startDate":1730454179000,"endDate":1724381333000},{"page":1,"startDate":1724372294000,"endDate":1720514144000},{"page":2,"startDate":1720510115000,"endDate":1708795021000},{"page":3,"startDate":1708587419000,"endDate":1707381223000},{"page":4,"startDate":1707061979000,"endDate":1704738375000},{"page":5,"startDate":1704655362000,"endDate":1703242042000},{"page":6,"startDate":1702799420000,"endDate":1701383375000},{"page":7,"startDate":1701381382000,"endDate":1700429440000},{"page":8,"startDate":1700391749000,"endDate":1699827038000},{"page":9,"startDate":1699709160000,"endDate":1699123904000},{"page":10,"startDate":1699105394000,"endDate":1696550400000},{"page":11,"startDate":1696464000000,"endDate":1693440000000},{"page":12,"startDate":1693353600000,"endDate":1676937600000},{"page":13,"startDate":1676592000000,"endDate":1674777600000},{"page":14,"startDate":1672099200000,"endDate":1665792000000},{"page":15,"startDate":1665532800000,"endDate":1656979200000},{"page":16,"startDate":1655942400000,"endDate":1653177600000},{"page":17,"startDate":1653091200000,"endDate":1641513600000},{"page":18,"startDate":1640995200000,"endDate":1636588800000},{"page":19,"startDate":1636070400000,"endDate":1621094399000},{"page":20,"startDate":1620662399000,"endDate":1606579199000},{"page":21,"startDate":1606665599000,"endDate":-1}]},"memotags":[{"name":"博客","memoIds":["2024-10-16 18:36:24","2024-08-23 08:18:14","2023-11-06 21:20:06","2023-10-29 01:13:43","1980-01-01 00:48:28"]},{"name":"沉思","memoIds":["2024-02-28 17:24:54","2024-02-22 15:36:59","2024-02-13 16:01:25","2024-02-09 00:34:23"]},{"name":"obsidian","memoIds":["2024-02-18 01:19:32"]},{"name":"五笔输入法","memoIds":["2024-02-18 01:19:32"]},{"name":"书","memoIds":["2024-02-16 00:17:38"]},{"name":"工具","memoIds":["2023-12-27 18:09:43","2023-11-29 03:12:05","2023-11-21 00:57:14","2023-11-02 22:20:54","2023-08-30"]},{"name":"故事","memoIds":["2023-12-10 06:42:56"]},{"name":"react","memoIds":["2023-11-08 01:30:55"]},{"name":"漫画","memoIds":["2023-11-06 21:20:06"]},{"name":"mdx","memoIds":["2023-11-05 21:04:56"]}]},"__N_SSG":true}