{"pageProps":{"client":"static","source":[{"id":"2024-01-13 12:20:00","content":"\n一万年过去了。\n\n\n\n","tags":[],"imgsmd":["![](https://cdn.jsdelivr.net/gh/NamiLing/upic/picgo/202401131219995.webp)"],"sourceFile":"003.md","csrIndex":[0,0],"code":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"一万年过去了。\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","length":12},{"id":"2024-01-09 02:26:15","content":"\n感觉要花很多时间去堆具象的东西才行……博客的设计风格也是简单到像只加了一点排版的 txt，甚至还觉得不够简单 …… 对花里胡哨的东西实在无缘。如果用一个图案代表风格，那我只能是一个主题色矩形方块，没有圆角的那种。\n\n","tags":[],"imgsmd":[],"sourceFile":"003.md","csrIndex":[0,1],"code":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"感觉要花很多时间去堆具象的东西才行……博客的设计风格也是简单到像只加了一点排版的 txt，甚至还觉得不够简单 …… 对花里胡哨的东西实在无缘。如果用一个图案代表风格，那我只能是一个主题色矩形方块，没有圆角的那种。\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","length":109},{"id":"2024-01-08 03:22:42","content":"\n看了一下 GraphQL …… 嗯？这不就是我之前想加给博客 build 和 CSR 的东西？？我还在想如果搞多种数据存储形式要怎么统一查询方式来着，感觉每种数据存储形式都要单独维护一份 query 的实现好麻烦，还要写sql。好好好，至少带有 GraphQL 实现的数据库可以统一查询方式了。大概。拿来搞多种后端接口形式统一也挺好的嗯。\n\n","tags":[],"imgsmd":[],"sourceFile":"003.md","csrIndex":[0,2],"code":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"看了一下 GraphQL …… 嗯？这不就是我之前想加给博客 build 和 CSR 的东西？？我还在想如果搞多种数据存储形式要怎么统一查询方式来着，感觉每种数据存储形式都要单独维护一份 query 的实现好麻烦，还要写sql。好好好，至少带有 GraphQL 实现的数据库可以统一查询方式了。大概。拿来搞多种后端接口形式统一也挺好的嗯。\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","length":172},{"id":"2024-01-05 呵呵","content":"\n思考了过多会归于虚无，会觉得好多看似有用的东西实际没有，本质的本质还是最传统的基础，是形而上但又实际的东西。但大家热爱为新的形式买单，就像热爱研究茴字的五种写法一样。鲁迅先生的精神状态真是领先一百年。\n\n很多产品宣传“你为什么需要xxx”，有时可能是真需要，但更多时候，其实是在说“我们真的有改进哦，为了符合需求，开发出了茴字的第六种写法”。观众有没有想过，自己真的需要掌握茴字的六种写法吗，是不是早就习惯茴字的第一种写法呢。\n\n但这样又有一个悖论……在了解足够多的茴字的写法前，你无法知道你其实只需要茴字的一种写法，\n\n不过对于创造出茴字第六种写法的人而言，总得找点事做。他们如果承认了五种茴字早已完备，就得转行了。总有人提出茴字的新写法，总会有人追随新的东西。新东西，很能赚吆喝的。\n\n躺着根本起不来，如果面前一米有瑜珈垫我就滚上去健身。但什么都没有，就是打滑的地面。对了，我再买一个瑜珈垫吧，虽然只能用十几天了。\n\n开启打游戏和看剧模式好难，特别难。怀疑是潜意识焦虑，觉得，人不能停止学习，就算什么都没学到，但不能在别问起“你大晚上干什么时”，说“我在打游戏和看剧”。很多时候别人并不在乎你做了什么，为什么而做，只想让你不要闲着，闲了你就去工作，你就去社交，你就去相亲。那我还是，闲的时候学习吧，我忙着学习，就别让我搞一些有的没的了。\n\n","tags":[],"imgsmd":[],"sourceFile":"003.md","csrIndex":[0,3],"code":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"思考了过多会归于虚无，会觉得好多看似有用的东西实际没有，本质的本质还是最传统的基础，是形而上但又实际的东西。但大家热爱为新的形式买单，就像热爱研究茴字的五种写法一样。鲁迅先生的精神状态真是领先一百年。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"很多产品宣传“你为什么需要xxx”，有时可能是真需要，但更多时候，其实是在说“我们真的有改进哦，为了符合需求，开发出了茴字的第六种写法”。观众有没有想过，自己真的需要掌握茴字的六种写法吗，是不是早就习惯茴字的第一种写法呢。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"但这样又有一个悖论……在了解足够多的茴字的写法前，你无法知道你其实只需要茴字的一种写法，\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"不过对于创造出茴字第六种写法的人而言，总得找点事做。他们如果承认了五种茴字早已完备，就得转行了。总有人提出茴字的新写法，总会有人追随新的东西。新东西，很能赚吆喝的。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"躺着根本起不来，如果面前一米有瑜珈垫我就滚上去健身。但什么都没有，就是打滑的地面。对了，我再买一个瑜珈垫吧，虽然只能用十几天了。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"开启打游戏和看剧模式好难，特别难。怀疑是潜意识焦虑，觉得，人不能停止学习，就算什么都没学到，但不能在别问起“你大晚上干什么时”，说“我在打游戏和看剧”。很多时候别人并不在乎你做了什么，为什么而做，只想让你不要闲着，闲了你就去工作，你就去社交，你就去相亲。那我还是，闲的时候学习吧，我忙着学习，就别让我搞一些有的没的了。\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","length":573},{"id":"2024-01-04 02:09:05","content":"\n微软雅黑的 600 和 700 的渲染简直不是一个等级的…… 为了不同字体渲染的一致性 决定改 600 了，淦。我需要加粗，但不要粗成这样，700 像 bolder……\n","tags":[],"imgsmd":[],"sourceFile":"003.md","csrIndex":[0,4],"code":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"微软雅黑的 600 和 700 的渲染简直不是一个等级的…… 为了不同字体渲染的一致性 决定改 600 了，淦。我需要加粗，但不要粗成这样，700 像 bolder……\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","length":86},{"id":"2024-01-03 09:15:21","content":"\n密码管理器换成自建 bitwarden 了。感觉应该还挺靠谱的吧，oss 备份加 onedrive 备份，半天一次。腾讯云倒也没有那么容易 service down……其实小小小小服务器的机房也很久没出问题过了，只是 docker 跑在小的虚拟机上确实不太够用。还是想 100% 的 uptime。\n\n","tags":[],"imgsmd":[],"sourceFile":"003.md","csrIndex":[0,5],"code":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"密码管理器换成自建 bitwarden 了。感觉应该还挺靠谱的吧，oss 备份加 onedrive 备份，半天一次。腾讯云倒也没有那么容易 service down……其实小小小小服务器的机房也很久没出问题过了，只是 docker 跑在小的虚拟机上确实不太够用。还是想 100% 的 uptime。\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","length":152},{"id":"2024-01-01 00:00:00","content":"\n那就祝大家都能便建康吧。可能不能便匆名，但可以便建康。\n\n---\n\n记一下昨天聊了些什么吧：\n\n- 为什么当初脑子抽了要学五笔啊\n- 网上看人画画和报班是不一样的。报班是大佬就在站你的面前，表演画画\n- 练基础很重要（曾老师加完班后开始疯狂输出）\n- 打开支付宝年度账单可能就发现自己没有想象中穷\n- 地铁 1 点停运\n- 太猖狂就会进局子，比如恒大\n- 睡好觉真难\n- 有人画了半年的手账，有人把一口气节奏大师刷到了595关\n- 最近有什么剧好看\n\n紫紫让我正常点，别发颠。\n","tags":[],"imgsmd":[],"sourceFile":"003.md","csrIndex":[0,6],"code":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    hr: \"hr\",\n    li: \"li\",\n    p: \"p\",\n    ul: \"ul\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"那就祝大家都能便建康吧。可能不能便匆名，但可以便建康。\"\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.p, {\n      children: \"记一下昨天聊了些什么吧：\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"为什么当初脑子抽了要学五笔啊\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"网上看人画画和报班是不一样的。报班是大佬就在站你的面前，表演画画\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"练基础很重要（曾老师加完班后开始疯狂输出）\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"打开支付宝年度账单可能就发现自己没有想象中穷\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"地铁 1 点停运\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"太猖狂就会进局子，比如恒大\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"睡好觉真难\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"有人画了半年的手账，有人把一口气节奏大师刷到了595关\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"最近有什么剧好看\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"紫紫让我正常点，别发颠。\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","length":240},{"id":"2023-12-30 01:38:49","content":"\n可以用 obsidian 搞出图里的这种统计页面…… 那个 button 插件很有用啊，非常十分有用啊……没有根据 template 新建文档的数据展示是没有灵魂的。\n\n这样我就可以躺着写日记了，为了各种能躺着干电脑才能干的活真是煞费苦心。虽然会延迟发布233。但是不重要，能方便写比较重要，之前就为了可以在手机上写日记，还在苦恼要不要用云cms，但我又实在不想把个人数据托管到服务器上。现在好了，obsidian 就是 cms。而且支持标签语法，这样和我博客里的解析就是一样的了。也还持 tag 查询。越想越觉得这就是为静态博客 cms 而生的……\n\n而且 git 的话，目录是可以软链接的。这使得 ob 的一个 vault 可以同时兼顾博客数据与其他数据，博客数据软链接到博客的代码仓库下就 ok 了。\n\n","tags":[],"imgsmd":["![Obsidian dashboard](https://cdn.jsdelivr.net/gh/NamiLing/upic/picgo/202312300138986.webp)"],"sourceFile":"002.md","csrIndex":[0,7],"code":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"可以用 obsidian 搞出图里的这种统计页面…… 那个 button 插件很有用啊，非常十分有用啊……没有根据 template 新建文档的数据展示是没有灵魂的。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"这样我就可以躺着写日记了，为了各种能躺着干电脑才能干的活真是煞费苦心。虽然会延迟发布233。但是不重要，能方便写比较重要，之前就为了可以在手机上写日记，还在苦恼要不要用云cms，但我又实在不想把个人数据托管到服务器上。现在好了，obsidian 就是 cms。而且支持标签语法，这样和我博客里的解析就是一样的了。也还持 tag 查询。越想越觉得这就是为静态博客 cms 而生的……\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"而且 git 的话，目录是可以软链接的。这使得 ob 的一个 vault 可以同时兼顾博客数据与其他数据，博客数据软链接到博客的代码仓库下就 ok 了。\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","length":356},{"id":"2023-12-29 15:13:31","content":"\n一键查询热门无头 CMS： https://jamstack.org/headless-cms/\n\n我还是在想要不要用数据库，对我来说博客内容确实是Typora 就够用了，管理也方便。但人，就是如此的，三心二意。昨天改改改，算了，还是用回第一版吧。大概需要写总结一下当下数据库托管方案，脑子乱糟糟的。\n\n","tags":[],"imgsmd":[],"sourceFile":"002.md","csrIndex":[0,8],"code":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    p: \"p\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"一键查询热门无头 CMS： \", _jsx(_components.a, {\n        href: \"https://jamstack.org/headless-cms/\",\n        children: \"https://jamstack.org/headless-cms/\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"我还是在想要不要用数据库，对我来说博客内容确实是Typora 就够用了，管理也方便。但人，就是如此的，三心二意。昨天改改改，算了，还是用回第一版吧。大概需要写总结一下当下数据库托管方案，脑子乱糟糟的。\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","length":153},{"id":"2023-12-27 18:09:43","content":"\n关于笔记 #工具\n\n有一种印象是国人很爱折腾效率工具。我也是只要是出的笔记工具全都有用过，但是说来真正有长期用的，也一共只有三个。非常好奇经常换笔记软件的人是怎么管理的……\n\n最开始用的是印象笔记，用了3年多吧。当时 markdown 还没有卷起来。印象笔记剪藏确实是挺好用的。缺点也很明显……富文本格式，当时对代码块十分不友好，markdown 支持得太晚了，要是支持得早点的话我也会继续用的。如果是有大量媒体附件的行业，印象笔记到现在也还是不错的选择。\n\n印象笔记总在宣传 All in one，我也信了一段时间的邪，拿它来存微博的图。现在觉得不如系统的文件管理器。\n\n用了一段时间的 mweb，没有记太多，好像一共就 80个 md 文件。这个不是所见即所得的，始终感觉不是很好。后来换软件时，这些笔记基本都因为难以一键迁移原因，大多留在了原本的平台上。现在对待新工具的态度非常谨慎，能不换就不换吧，简简单单才是真。当时 markdown + 文件管理的软件当时也不是很多，IA writer、 Ulysses 又太贵了。\n\n后面 notion 公测了，不得不说 notion 确实很强。但我是拿它当数据库用，而不是记笔记。notion 更方便管理，而不是记录……虽然也可以记录，但是如果作为一个笔记软件，它还是过于复杂了，页面切换速度也太慢了。\n\n被 Antarx 荼毒了双链后，开始用 logseq……为什么不是 roam research，因为穷啊（划掉）因为数据又是存在平台上的，rr 的结构又做不到notion的扩展程度和量级，但价格太贵了…… notion 一月 5 刀是可以接受的，但是 rr 记得算下来是每年要 1000 多 CNY 吧……哒咩，红豆泥\n\nlogseq 的笔记又是船新的了，没法把 notion 里一些零散的笔记迁移过来，而且就算 mweb 是本地markdown，格式转换也很麻烦。logseq 虽然用了本地文件系统，但完全抛弃了树形结构化的管理（讲真我不明白为什么 namespace 不直接目录结构，还不一样）。反正早就是污染了800遍的 markdown，和 obsidian 共用起来十分糟糕，倒是觉得 logseq 也大可再做得狠一点。\n\n在 logseq 中，分类是由页面元数据和 `pages tagged with xx` 完成的。还有大量的空白页，专门拿来看 backlink 的。这两块基本就代替了传统笔记中分类整理功能。\n\n我也不会拿 logseq 写长文，大纲模式的层级关系和长文很冲突，长文一般意味着要发布，基本还是用 notion 写的，写完不会再看一眼……大纲模式写的内容太随意了，几个月后我可能不知道我当时在想什么，笔记就是这么随意的一个东西。 logseq 复习的时候体验非常棒，想不起来的点进去就可以了，相关的所有东西都能用得到有效的复习。\n\nlogseq 的界面设计是非常的草台班子感……我觉得这不是去套一个设计系统可以解决的事情。设计系统只负责统一，用上设计系统还在写灰色 modal 套灰色 modal 这种层级，真的救不了……\n\n哦对了，剧本也是长文，但不发布，还是大纲写的。剧本真的非常非常适合大纲和块级白板，没有之一。obsidian 和 logseq 的大纲模式写剧本都很好用。对我来说，obsidian大纲的唯一问题是代码块编辑太拉了，用 obsidian 的意义只有一个…… Excalidraw 最好的客户端。\n\n总体而言，现在的 markdown 笔记多了三个常见的语法，其中后面两个是无法与 published markdown 兼容的关键。\n\n- yaml 数据头\n- `[[App内文章链接]]`\n- `#标签链接`\n\n","tags":["工具"],"imgsmd":[],"sourceFile":"002.md","csrIndex":[0,9],"code":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    li: \"li\",\n    p: \"p\",\n    ul: \"ul\",\n    ...props.components\n  }, {Tag} = _components;\n  if (!Tag) _missingMdxReference(\"Tag\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"关于笔记 \", _jsx(Tag, {\n        text: \"工具\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"有一种印象是国人很爱折腾效率工具。我也是只要是出的笔记工具全都有用过，但是说来真正有长期用的，也一共只有三个。非常好奇经常换笔记软件的人是怎么管理的……\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"最开始用的是印象笔记，用了3年多吧。当时 markdown 还没有卷起来。印象笔记剪藏确实是挺好用的。缺点也很明显……富文本格式，当时对代码块十分不友好，markdown 支持得太晚了，要是支持得早点的话我也会继续用的。如果是有大量媒体附件的行业，印象笔记到现在也还是不错的选择。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"印象笔记总在宣传 All in one，我也信了一段时间的邪，拿它来存微博的图。现在觉得不如系统的文件管理器。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"用了一段时间的 mweb，没有记太多，好像一共就 80个 md 文件。这个不是所见即所得的，始终感觉不是很好。后来换软件时，这些笔记基本都因为难以一键迁移原因，大多留在了原本的平台上。现在对待新工具的态度非常谨慎，能不换就不换吧，简简单单才是真。当时 markdown + 文件管理的软件当时也不是很多，IA writer、 Ulysses 又太贵了。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"后面 notion 公测了，不得不说 notion 确实很强。但我是拿它当数据库用，而不是记笔记。notion 更方便管理，而不是记录……虽然也可以记录，但是如果作为一个笔记软件，它还是过于复杂了，页面切换速度也太慢了。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"被 Antarx 荼毒了双链后，开始用 logseq……为什么不是 roam research，因为穷啊（划掉）因为数据又是存在平台上的，rr 的结构又做不到notion的扩展程度和量级，但价格太贵了…… notion 一月 5 刀是可以接受的，但是 rr 记得算下来是每年要 1000 多 CNY 吧……哒咩，红豆泥\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"logseq 的笔记又是船新的了，没法把 notion 里一些零散的笔记迁移过来，而且就算 mweb 是本地markdown，格式转换也很麻烦。logseq 虽然用了本地文件系统，但完全抛弃了树形结构化的管理（讲真我不明白为什么 namespace 不直接目录结构，还不一样）。反正早就是污染了800遍的 markdown，和 obsidian 共用起来十分糟糕，倒是觉得 logseq 也大可再做得狠一点。\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"在 logseq 中，分类是由页面元数据和 \", _jsx(_components.code, {\n        children: \"pages tagged with xx\"\n      }), \" 完成的。还有大量的空白页，专门拿来看 backlink 的。这两块基本就代替了传统笔记中分类整理功能。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"我也不会拿 logseq 写长文，大纲模式的层级关系和长文很冲突，长文一般意味着要发布，基本还是用 notion 写的，写完不会再看一眼……大纲模式写的内容太随意了，几个月后我可能不知道我当时在想什么，笔记就是这么随意的一个东西。 logseq 复习的时候体验非常棒，想不起来的点进去就可以了，相关的所有东西都能用得到有效的复习。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"logseq 的界面设计是非常的草台班子感……我觉得这不是去套一个设计系统可以解决的事情。设计系统只负责统一，用上设计系统还在写灰色 modal 套灰色 modal 这种层级，真的救不了……\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"哦对了，剧本也是长文，但不发布，还是大纲写的。剧本真的非常非常适合大纲和块级白板，没有之一。obsidian 和 logseq 的大纲模式写剧本都很好用。对我来说，obsidian大纲的唯一问题是代码块编辑太拉了，用 obsidian 的意义只有一个…… Excalidraw 最好的客户端。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"总体而言，现在的 markdown 笔记多了三个常见的语法，其中后面两个是无法与 published markdown 兼容的关键。\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"yaml 数据头\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"[[App内文章链接]]\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"#标签链接\"\n        })\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","length":1562}],"info":{"pages":16,"memos":168,"tags":6,"imgs":13,"fileMap":[{"srcName":"003.md","lastModified":1705119611829,"dateRange":{"start":"2024-01-13 12:20","end":"2024-01-01 00:00"},"startAt":{"page":0,"index":0},"endAt":{"page":0,"index":6}},{"srcName":"002.md","lastModified":1704142441953,"dateRange":{"start":"2023-12-30 01:38","end":"2023-08-21 08:00"},"startAt":{"page":0,"index":7},"endAt":{"page":7,"index":3}},{"srcName":"001.md","lastModified":1699708351643,"dateRange":{"start":"2023-03-17 08:00","end":"2019-07-16 08:00"},"startAt":{"page":7,"index":4},"endAt":{"page":16,"index":6}},{"srcName":"000.md","lastModified":1704112748054,"dateRange":{"start":"1980-01-01 00:48","end":"1980-01-01 00:48"},"startAt":{"page":16,"index":7},"endAt":{"page":16,"index":7}}],"pageMap":[{"page":0,"startDate":1705119600000,"endDate":1703671783000},{"page":1,"startDate":1703589232000,"endDate":1701466701000},{"page":2,"startDate":1701457476000,"endDate":1700498534000},{"page":3,"startDate":1700480058000,"endDate":1699962871000},{"page":4,"startDate":1699889754000,"endDate":1699269502000},{"page":5,"startDate":1699189496000,"endDate":1698105600000},{"page":6,"startDate":1697068800000,"endDate":1693699200000},{"page":7,"startDate":1693526400000,"endDate":1677628800000},{"page":8,"startDate":1677110400000,"endDate":1675296000000},{"page":9,"startDate":1675036800000,"endDate":1666828800000},{"page":10,"startDate":1666137600000,"endDate":1658102400000},{"page":11,"startDate":1657065600000,"endDate":1653436800000},{"page":12,"startDate":1653350400000,"endDate":1643414400000},{"page":13,"startDate":1641686400000,"endDate":1637280000000},{"page":14,"startDate":1637020800000,"endDate":1623599999000},{"page":15,"startDate":1622592000000,"endDate":1606943150000},{"page":16,"startDate":1606751999000,"endDate":-1}]},"memotags":[{"name":"工具","memoIds":["2023-12-27 18:09:43","2023-11-29 03:12:05","2023-11-21 00:57:14","2023-11-02 22:20:54","2023-08-30"]},{"name":"故事","memoIds":["2023-12-10 06:42:56"]},{"name":"react","memoIds":["2023-11-08 01:30:55"]},{"name":"博客","memoIds":["2023-11-06 21:20:06","2023-10-29 01:13:43","1980-01-01 00:48:28"]},{"name":"漫画","memoIds":["2023-11-06 21:20:06"]},{"name":"mdx","memoIds":["2023-11-05 21:04:56"]}]},"__N_SSG":true}