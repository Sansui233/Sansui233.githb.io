{"pageProps":{"meta":{"title":"Github hosts 更新脚本(MAC)","date":"2021-08-07 08:00","tags":["科学上网"],"categories":"工具","description":"Github hosts 更新脚本(MAC)","keywords":"Github, hosts, 更新, 脚本, Mac"},"content":"\r\n此工具已更新至 [Github](https://github.com/Sansui233/mac-githubhosts-autoupdate)。\r\n\r\n- 安装卸载脚本\r\n- 自动定时运行\r\n- 平时不占内存，运行时几乎不占内存\r\n\r\n原文如下：\r\n\r\n------\r\n\r\n最近 Github 墙得越来越厉害了。写了个 Shell 工具，连不上的时候就更新一下。可以配合 Alfred 使用。\r\n\r\n使用的 host 源来自[这里](https://github.com/JohyC/Hosts)。其实用 SwitchHosts 更新也行，但我真的讨厌 Electron App……麻了，现在听个歌写个笔记 1个多 G 的内存就没了。\r\n\r\n也可以用写成定时程序后台运行，加个 LaunchDaemon 文件就行，但，我不会打包 Mac App……文件这么散着分发也太 emmm，而且别人装起来也麻烦……\r\n\r\n麻烦归麻烦还是要写的……\r\n\r\n文件和说明已经上传到 [Github](https://github.com/Sansui233/mac-githubhosts-autoupdate)。\r\n\r\n- 下面这个文件保存取名为 `hoststool`\r\n- 赋予执行权限 `chmod +x hoststool`。如果为了执行起来方便，可以放进环境变量的目录（比如/usr/local/bin）\r\n- 然后就可以使用 `hoststool -u` 更新 host 了，运行结果会发系统通知。之前可以自己看看 hosts 内容有没有问题。这是有几率失败的，因为用的 gittee 的 host 源，经常会提示文件疑似违规……这种时候再请求一次就好了，第二次就不违规了。我也不知道为什么。\r\n\r\n（定时任务的部分在后面）\r\n\r\n```shell\r\n#!/bin/bash\r\nshowHelp() {\r\n\techo \"-u [source_url]\tupdate github hosts. You can specify a custom host source\"\r\n\techo \"-b\tbackup /etc/hosts to /etc/hosts.backup\"\r\n\techo \"-r\trecover hosts.backup to hosts\"\r\n\techo \"-f\tlist files in /etc which contains \\\"hosts\\\"\"\r\n}\r\n\r\n\r\n# ====== Main =====\r\nif [ $# -eq 0 ]; then showHelp;exit 0;fi\r\n\r\n# CONF\r\ndownload_dir=\"$HOME/etc/hoststool\"\r\ngithub_hosts=\"https://gitee.com/yuchi-shentang/GithubHosts/raw/main/hosts.txt\"\r\nif [ ! -d \"$download_dir\" ]; then\r\n  mkdir -p $download_dir\r\nfi\r\n\r\ncase \"$1\" in\r\n\t-f)\r\n\t\tls /etc | grep hosts;\r\n\t\texit 0;;\r\n\t-b) \r\n\t\tsudo cp /etc/hosts /etc/hosts.backup;\r\n\t\texit 0;;\r\n\t-r) \r\n\t\tsudo cp /etc/hosts.backup /etc/hosts;\r\n\t\texit 0;;\r\n\t-u) \r\n\t\tif [ $2 ]; then github_hosts=$2;fi\r\n\t\tcurl -o ${download_dir}/hosts ${github_hosts};\r\n\t\tif [ $? -ne 0 ]; then\r\n\t\t\techo \"[ERROR] 获取远程 host 出错，请尝试更换 source 或检查 download_dir 读写权限\"\r\n\t\t\tosascript -e 'display notification \"获取远程 host 出错，请尝试更换 source\" with title \"hoststool\"'\r\n\t\t\texit 1\r\n\t\tfi\r\n\t\t\r\n\t\t# Validate host content length\r\n\t\tlines=$(awk '{print NR}' ${download_dir}/hosts | tail -n1)\r\n\t\tif [ $lines -lt 10 ]\r\n\t\tthen\r\n\t\t\techo '[ERRO] 远程 Github Hosts 无效（Gitee源不稳定），通常重试即可'\r\n\t\t\tosascript -e 'display notification \"远程 Github Hosts 无效（Gitee源不稳定），通常重试即可\" with title \"hoststool\"'\r\n\t\t\trm ${download_dir}/hosts\r\n\t\t\texit 1\r\n\t\tfi\r\n\r\n\t\t# Remove old content\r\n\t\tbegin=$(sed -n  '/# ==== Github Start ====/=' /etc/hosts | awk 'NR==1{print}')\r\n\t\tend=$(sed -n  '/# ==== Github End ====/=' /etc/hosts | awk 'END{print}')\r\n\t\techo \"Removing old hosts. Start at line \\\"${begin}\\\", End at line \\\"${end}\\\"\"\r\n\t\tcat /etc/hosts | sed \"${begin},${end}d\" > ${download_dir}/hosts.tmp\r\n\t\tif [ $? -ne 0 ]; then\r\n\t\t\t## Trip Failed\r\n\t\t\techo \"[INFO] 当前 Host中 无旧的 Github Host 标记可清除\"\r\n\t\telse\r\n\t\t\t## Trip Succeed, move result\r\n\t\t\techo \"[INFO] 清除旧的 Github Host 标记\"\r\n\t\t\tsudo cp /etc/hosts /etc/hosts.backup && sudo cp ${download_dir}/hosts.tmp /etc/hosts;\r\n\t\tfi\r\n\r\n\t\t# Add new hosts\r\n\t\tsudo bash -c \"echo '# ==== Github Start ====' >> /etc/hosts\" # Add github host\r\n\t\tif [ $? -ne 0 ]; then\r\n\t\t\techo \"[ERROR] 无root权限，请尝试运行脚本手动输入密码\"\r\n\t\t\tosascript -e 'display notification \"无root权限，请尝试运行脚本手动输入密码\" with title \"hoststool\"'\r\n\t\t\trm ${download_dir}/hosts.tmp\r\n\t\t\trm ${download_dir}/hosts\r\n\t\t\texit 1;\r\n\t\tfi\r\n\t\tsudo bash -c \"echo \\\"# Updated at $(date)\\\" >> /etc/hosts\" # Add github host\r\n\t\tsudo bash -c \"cat ${download_dir}/hosts >> /etc/hosts\";\r\n\t\tsudo bash -c \"echo '# ==== Github End ====' >> /etc/hosts\"\r\n\t\trm ${download_dir}/hosts.tmp\r\n\t\trm ${download_dir}/hosts\r\n\r\n\t\techo \"[INFO] Github Hosts 块更新于 $(date)\"\r\n\t\tosascript -e 'display notification \"Github Hosts 已更新\" with title \"hoststool\"'\r\n\t\texit 0;;\r\n\t-h|--help)\r\n\t\tshowHelp;\r\n\t\texit 0;;\r\n\t*)\r\n\t\techo \"Unknown command\";\r\n\t\tshowHelp;\r\n\t\texit 1;;\r\nesac\r\n```\r\n\r\n## 定时\r\n\r\n保存以下文件为 `hoststool.plist`。\r\n\r\n```plist\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\r\n<plist version=\"1.0\">\r\n<dict>\r\n<key>Label</key><string>hoststool</string>\r\n\r\n<key>ProgramArguments</key>\r\n<array>\r\n  <string>/usr/local/bin/hoststool</string>\r\n  <string>-u</string>\r\n</array>\r\n\r\n<key>RunAtLoad</key>\r\n<true/>\r\n\r\n<key>StartInterval</key>\r\n<integer>3600</integer>\r\n\r\n<key>StandardOutPath</key>\r\n<string>/Library/Logs/hoststool.log</string>\r\n\r\n<key>StandardErrorPath</key>\r\n<string>/Library/Logs/hoststool.log</string>\r\n\r\n</dict>\r\n</plist>\r\n```\r\n\r\n把 `/usr/local/bin` ，改成你存放脚本的路径。\r\n\r\n时间间隔为 3600 秒，可以自己修改。\r\n\r\n然后执行\r\n\r\n```shell\r\n$ sudo cp hoststool.plist /Library/LaunchDaemons\r\n$ sudo chown root:admin /Library/LaunchDaemons/hoststool.plist\r\n$ sudo launchctl load -w /Library/LaunchDaemons/hoststool.plist\r\n```\r\n\r\n执行完就会立刻运行一次脚本。由于定时任务是 root 用户不是个人用户，不会有通知，可以去 Console 看 log。","excerpt":" 此工具已更新至 [Github](https://github.com/Sansui233/mac-githubhosts-autoupdate)。  - 安装卸载脚本 - 自动定时运行 - 平时不占内存，运行时几乎不占内存  原文如下：  ------  最近 Github 墙得越来","prevPost":{"title":"纯函数与算法","link":"/posts/pure-function"},"nextPost":{"title":"网盘目录程序比较","link":"/posts/网盘目录程序比较"},"headings":[]},"__N_SSG":true}