{"pageProps":{"mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\",\n    hr: \"hr\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"网上讲如何开机运行脚本的很多，但我有关机时关闭远程服务的需求。于是上外网查了一下如何在关机时执行一段脚本。\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"新建一个shell文件\",\n      children: \"新建一个shell文件\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"这个shell中包含了你需要开机关机时运行的脚本。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"#!/bin/bash\\r\\nfunction shutdown()\\r\\n{\\r\\n\\r\\n  # 关机用的脚本放这里\\r\\n\\r\\n  exit 0\\r\\n}\\r\\n\\r\\nfunction startup()\\r\\n{\\r\\n\\r\\n  # 开机用的脚本放这里\\r\\n\\r\\n  tail -f /dev/null &\\r\\n  wait $!\\r\\n}\\r\\n\\r\\ntrap shutdown SIGTERM\\r\\ntrap shutdown SIGKILL\\r\\n\\r\\nstartup;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"以上文件我取名为launchdeamon，赋予了当前用户的执行权限。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-shell\",\n        children: \"chmod 755 launchdaemon\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"新建plist文件\",\n      children: \"新建plist文件\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"为了让launchdeamon能在开机时自动运行，需要编写一个相应plist文件，使用launctl做到开机启动。关于launchctl和plist的作用，请先查看这篇文章：\", _jsx(_components.a, {\n        href: \"https://www.jianshu.com/p/b65c1d339eec\",\n        children: \"Mac执行定时任务之launchctl\"\n      }), \"。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"plist文件的内容如下：\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-xml\",\n        children: \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\r\\n<!DOCTYPE plist PUBLIC \\\"-//Apple//DTD PLIST 1.0//EN\\\" \\\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\\\">\\r\\n<plist version=\\\"1.0\\\">\\r\\n<dict>\\r\\n<key>Label</key><string>boot-shutdown</string>\\r\\n\\r\\n<key>ProgramArguments</key>\\r\\n<array>\\r\\n  <string>$SCRIPT_PATH/launchdaemon</string>\\r\\n</array>\\r\\n\\r\\n<key>RunAtLoad</key>\\r\\n<true/>\\r\\n\\r\\n<key>StandardOutPath</key>\\r\\n<string>$LOG_PATH/boot-shutdown.log</string>\\r\\n\\r\\n<key>StandardErrorPath</key>\\r\\n<string>$PLOG_PATH/boot-shutdown.err</string>\\r\\n\\r\\n</dict>\\r\\n</plist>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"plist文件以键值对的形式存储信息。以上文件的字段解释：\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"Label\"\n        }), \"：标签，也就是运行该plist显示的名字。这里为boot-shutdown\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"ProgramArguments\"\n        }), \"：\", _jsx(_components.code, {\n          children: \"array\"\n        }), \"里可以存放多个需要运行程序。这里的\", _jsx(_components.code, {\n          children: \"$SCRIPT_PATH\"\n        }), \"请自己修改。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"RunAtLoad\"\n        }), \"：开机自启，为\", _jsx(_components.code, {\n          children: \"true\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"StandardOutPath\"\n        }), \"：打印标准输出到某个文件，方便查看程序后台运行的结果，\", _jsx(_components.code, {\n          children: \"$LOG_PATH\"\n        }), \"自行修改。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"StandardErrorPath\"\n        }), \"：打印标准错误到某个文件，同上。\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"以上文件我取名为 boot-shutdown-script.plist 。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"由于shell脚本的执行权限是当前用户，以上文件需要放入当前用户的开机启动文件夹，即为 ~/Library/LaunchAgents 。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"然后将plist文件加入开启启动：\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"launchctl load ~/Library/LaunchAgents/boot-shutdown-script.plist\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"此时重启后，可以使用以下命令查看脚本运行状态\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-shell\",\n        children: \"launchctl list | grep boot\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"输出为\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"438\\t0\\tboot-shutdown\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"第一个是pid。第二个为状态码，为0说明正常运行中。\"\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.p, {\n      children: \"参考：\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://stackoverflow.com/questions/24200924/run-a-script-only-at-shutdown-not-log-off-or-restart-on-mac-os-x\",\n          children: \"Run a script only at shutdown (not log off or restart) on Mac OS X\"\n        })\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Mac上如何开机与关机时自动运行Shell脚本","date":"2020-11-24","categories":"折腾","description":"Mac上如何开机与关机时自动运行Shell脚本","tags":["工具"],"keywords":"Mac, shell, 自动化, 脚本"},"scope":{}},"prevPost":{"title":"关于指针与Golang的结构体","link":"/posts/关于指针与Golang的结构体"},"nextPost":{"title":"关于Golang程序的内存占用过大的问题","link":"/posts/关于Golang程序的内存占用过大的问题"},"excerpt":" 网上讲如何开机运行脚本的很多，但我有关机时关闭远程服务的需求。于是上外网查了一下如何在关机时执行一段脚本。\r \r ## 新建一个shell文件\r \r 这个shell中包含了你需要开机关机时运行的脚本。\r \r ```bash\r #!/bin/bash\r function shutdown","headings":[{"title":"新建一个shell文件","rank":1,"id":"新建一个shell文件"},{"title":"新建plist文件","rank":1,"id":"新建plist文件"}]},"__N_SSG":true}