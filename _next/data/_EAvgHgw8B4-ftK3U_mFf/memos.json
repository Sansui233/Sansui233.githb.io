{"pageProps":{"client":"static","source":[{"id":"2023-11-13 23:35:54","content":"\n经常都觉得我做的东西看起来都好冷冰冰。有没有一种可能，冷的是内容 (= =)\n\n动不动就大几百字，往这边倒垃圾，也不用 emoji🤡。我在别的平台是经常用表情的。\n\n可能一个人的话，就没有什么阴阳怪气的必要了吧。\n\n","tags":[],"imgsmd":[],"sourceFile":"002.md","csrIndex":[0,0],"code":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"经常都觉得我做的东西看起来都好冷冰冰。有没有一种可能，冷的是内容 (= =)\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"动不动就大几百字，往这边倒垃圾，也不用 emoji🤡。我在别的平台是经常用表情的。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"可能一个人的话，就没有什么阴阳怪气的必要了吧。\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","length":110},{"id":"2023-11-13 06:10:38","content":"\n一不小心 debug 了 4 个小时，但居然搞定了动态高度的无限滚动！布局虽然看起来没变化，实际上完全不是一个渲染方式。这两天改了700多行吧，从统一 datafetching 的方式开始，以后对接多后端就会方便很多！\n\n我觉得我那个 virtual list 的实现还行，泛用性还是挺强的，对外没有任何状态需要管理，父级组件除了存数据，啥也不用干。唯一的问题是 sources 和 props 有点重复了，要不改成回调函数渲染算了，耐思。\n\n——如果我这次也能安全度过感冒的话。\n\n","tags":[],"imgsmd":[],"sourceFile":"002.md","csrIndex":[0,1],"code":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"一不小心 debug 了 4 个小时，但居然搞定了动态高度的无限滚动！布局虽然看起来没变化，实际上完全不是一个渲染方式。这两天改了700多行吧，从统一 datafetching 的方式开始，以后对接多后端就会方便很多！\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"我觉得我那个 virtual list 的实现还行，泛用性还是挺强的，对外没有任何状态需要管理，父级组件除了存数据，啥也不用干。唯一的问题是 sources 和 props 有点重复了，要不改成回调函数渲染算了，耐思。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"——如果我这次也能安全度过感冒的话。\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","length":243},{"id":"2023-11-11 21:26:00","content":"\n诶居然是双十一。什么都没买，不知道要买什么。\n\n我又重构了……不过上次是服务端的底层，这次是客户端的。因为我觉得总有一天，我是会用到数据库的，先把接口的形状调整好吧。然后做成无限滚动的。感觉一小条一小条的东西还是能无限滚动比较过瘾。\n\n然后就是无限滚动的 virual list 实现，两年前我写 fgo 的工具时也有写过，但那个是定高的，动态高度的当时没思路。\n\n然后我看了一眼推特，推特是监听resize事件直接注入transform的。我觉得很神奇，前面没有加载的元素的高度占用是怎么算的……？\n\n然后我又看了一眼……前面消失的元素没法算。前向加载时已有元素的 translateY 也一直在变化。\n\n我大概是想到了做法。每次重新渲染前面的会对比已经之前的 place holder height，有变化的话说明窗口 resize 过，后面的元素也要跟着一起更新。よいよい，真好，我学。\n\n微博是有一个recycle scroller，相册滚动也是这么个思路。而且微博宽度是定宽的，也就是上高度不会有任何shift，实现起来会简单很多。\n\n那还是学推特吧，主要是响应式做到底。\n\n\n","tags":[],"imgsmd":[],"sourceFile":"002.md","csrIndex":[0,2],"code":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"诶居然是双十一。什么都没买，不知道要买什么。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"我又重构了……不过上次是服务端的底层，这次是客户端的。因为我觉得总有一天，我是会用到数据库的，先把接口的形状调整好吧。然后做成无限滚动的。感觉一小条一小条的东西还是能无限滚动比较过瘾。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"然后就是无限滚动的 virual list 实现，两年前我写 fgo 的工具时也有写过，但那个是定高的，动态高度的当时没思路。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"然后我看了一眼推特，推特是监听resize事件直接注入transform的。我觉得很神奇，前面没有加载的元素的高度占用是怎么算的……？\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"然后我又看了一眼……前面消失的元素没法算。前向加载时已有元素的 translateY 也一直在变化。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"我大概是想到了做法。每次重新渲染前面的会对比已经之前的 place holder height，有变化的话说明窗口 resize 过，后面的元素也要跟着一起更新。よいよい，真好，我学。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"微博是有一个recycle scroller，相册滚动也是这么个思路。而且微博宽度是定宽的，也就是上高度不会有任何shift，实现起来会简单很多。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"那还是学推特吧，主要是响应式做到底。\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","length":495},{"id":"2023-11-09 18:33:17","content":"\n“我去做点危险的事情，顺便去个世。死了就是我该死，没死就是罪不至死。”\n\n","tags":[],"imgsmd":[],"sourceFile":"002.md","csrIndex":[0,3],"code":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"“我去做点危险的事情，顺便去个世。死了就是我该死，没死就是罪不至死。”\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","length":38},{"id":"2023-11-09 16:54:32","content":"\n卧槽，仲尼去世了……我很不喜欢的简中的舆论环境，特别是娱乐版块。动不动就死全家。可能能上网的小孩子太多了。\n\n看起来像是危险地带游泳的意外。但给我的感觉是，他想去做点危险的事情，如果能顺便死了就好了。又不是什么大风大浪天。\n\n如果一个人想死，但无所谓别人知道不知道是自杀，那他会考虑大家都能很快知道的死法，比如跳楼，比如上吊。\n\n如果一个人想死，但不想再让人受到关注，甚至不想让人看出来是自杀。那他会伪装得像正常死亡或者意外，比如加重已有的疾病，比如不遵守红绿灯。\n\n海边自寻短见的例子也不少。\n\n中国不是一个被海包围的国家，自杀很少写是投海的。但日本和韩国的题材有不少。\n\n海不是平静的。平静的海岸只是特例。在有礁石的地方，隔着几十米就可以听到海浪的咆哮，四周的空间都被巨大的海浪声淹没，唤醒人类内心深处最原始的对自然的敬畏，不敢再前进一步。\n\n海浪仿佛在警示人类，不想死的，不要过来。\n\n仲尼被曝料出的行为我也不喜欢。但我关注他们时，卡琳娜和他生活地好好的，已经过去很久了。不论怎么说，我一向不喜欢管太多的人。人家又没有求助，那私事少掺和，别当爹。\n\n说来仲尼和卡琳娜我还是先关注的仲尼，他一边做菜一边讲生活的方式挺独特的，那个时候卡琳娜也还没开始 cos，才发油画视频。可以说卡琳娜初期就是仲尼带火的，之后两个人发展是互益的。\n\n然后突然被扒出了很久之前的黑历史。发酵得很快。很快他道歉了，然后没声了。直到今年才和卡琳娜一起又发了视频。\n\n我又想起了张哲澣的事情。当然以我的角度，如果说仲尼确实是人品不行没得洗，张哲澣就纯粹是冤大头，除了他确实在旅游时在某神社外圈拍了一张自拍。文字一类的“事实”，全是假的，甚至百度百科都是恶意窜改的。\n\n不过我也不大喜欢他，他发自拍太多了。我更喜欢分享自己的热爱的事情的人。\n\n","tags":[],"imgsmd":[],"sourceFile":"002.md","csrIndex":[0,4],"code":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"卧槽，仲尼去世了……我很不喜欢的简中的舆论环境，特别是娱乐版块。动不动就死全家。可能能上网的小孩子太多了。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"看起来像是危险地带游泳的意外。但给我的感觉是，他想去做点危险的事情，如果能顺便死了就好了。又不是什么大风大浪天。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"如果一个人想死，但无所谓别人知道不知道是自杀，那他会考虑大家都能很快知道的死法，比如跳楼，比如上吊。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"如果一个人想死，但不想再让人受到关注，甚至不想让人看出来是自杀。那他会伪装得像正常死亡或者意外，比如加重已有的疾病，比如不遵守红绿灯。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"海边自寻短见的例子也不少。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"中国不是一个被海包围的国家，自杀很少写是投海的。但日本和韩国的题材有不少。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"海不是平静的。平静的海岸只是特例。在有礁石的地方，隔着几十米就可以听到海浪的咆哮，四周的空间都被巨大的海浪声淹没，唤醒人类内心深处最原始的对自然的敬畏，不敢再前进一步。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"海浪仿佛在警示人类，不想死的，不要过来。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"仲尼被曝料出的行为我也不喜欢。但我关注他们时，卡琳娜和他生活地好好的，已经过去很久了。不论怎么说，我一向不喜欢管太多的人。人家又没有求助，那私事少掺和，别当爹。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"说来仲尼和卡琳娜我还是先关注的仲尼，他一边做菜一边讲生活的方式挺独特的，那个时候卡琳娜也还没开始 cos，才发油画视频。可以说卡琳娜初期就是仲尼带火的，之后两个人发展是互益的。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"然后突然被扒出了很久之前的黑历史。发酵得很快。很快他道歉了，然后没声了。直到今年才和卡琳娜一起又发了视频。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"我又想起了张哲澣的事情。当然以我的角度，如果说仲尼确实是人品不行没得洗，张哲澣就纯粹是冤大头，除了他确实在旅游时在某神社外圈拍了一张自拍。文字一类的“事实”，全是假的，甚至百度百科都是恶意窜改的。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"不过我也不大喜欢他，他发自拍太多了。我更喜欢分享自己的热爱的事情的人。\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","length":761},{"id":"2023-11-09 08:04:19","content":"\n即便是用的 windows，写博客的流程还是没什么变化。  \n以前在 mac 上时，就是 typora 写，alfred 动作一键上传。  \n现在在 win 上，还是 typora 写，Listary 动作一键上传。    \n连上传脚本都还是 .sh。ps1 和 bat 都不熟，问 chatgpt 的结果也有权限问题，太难用了。  \n不同的是，自从把 memos 模块做起来，我的碎碎念变多了。终于不用往大眼和推特倒垃圾了。  \n当然我觉得用静态网页灌水的群体也很少，可能也只有我一个吧哈哈，毕竟我买不起稳定的服务器嘛。这么写博客的人，首先得是会 markdown 的基本语法，然后要会一种不用开终端就一键发布博客的方法（开终端真的很废时间\n\n","tags":[],"imgsmd":[],"sourceFile":"002.md","csrIndex":[0,5],"code":"\"use strict\";\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    br: \"br\",\n    p: \"p\",\n    ...props.components\n  };\n  return _jsxs(_components.p, {\n    children: [\"即便是用的 windows，写博客的流程还是没什么变化。\", _jsx(_components.br, {}), \"\\n\", \"以前在 mac 上时，就是 typora 写，alfred 动作一键上传。\", _jsx(_components.br, {}), \"\\n\", \"现在在 win 上，还是 typora 写，Listary 动作一键上传。\", _jsx(_components.br, {}), \"\\n\", \"连上传脚本都还是 .sh。ps1 和 bat 都不熟，问 chatgpt 的结果也有权限问题，太难用了。\", _jsx(_components.br, {}), \"\\n\", \"不同的是，自从把 memos 模块做起来，我的碎碎念变多了。终于不用往大眼和推特倒垃圾了。\", _jsx(_components.br, {}), \"\\n\", \"当然我觉得用静态网页灌水的群体也很少，可能也只有我一个吧哈哈，毕竟我买不起稳定的服务器嘛。这么写博客的人，首先得是会 markdown 的基本语法，然后要会一种不用开终端就一键发布博客的方法（开终端真的很废时间\"]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","length":324},{"id":"2023-11-08 21:54:39","content":"\n简单糊了一下图片浏览器移动端的交互，不是很有细节，但能用。实现方式也不是我满意的，要滑动不闪屏一定得要三个容器，现在只有一个。但 bug 终于修没了……\n\n但是桌面端……emmm 加了 touchevent 就没了桌面端的交互啊……汗，真要做好的话，事件还要先看设备再绑定，touch 和 mouse 的实现逻辑不一样。\n\n但但但又但是，你也不能说支持 touch 的设备就不绑定 click 事件了。因为有一种设备叫触屏笔记本。\n\n有人会说绑 pointer 不就好了。耐思，我本来也是这么想的，因为我最开始绑的就是pointer。直到我发现 pointerUp 在 safari 上基本是不能用的状态，cancel 和 leave 也一样，pointer 事件的触发过程远远没有 touch 事件稳定……\n\n","tags":[],"imgsmd":[],"sourceFile":"002.md","csrIndex":[0,6],"code":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"简单糊了一下图片浏览器移动端的交互，不是很有细节，但能用。实现方式也不是我满意的，要滑动不闪屏一定得要三个容器，现在只有一个。但 bug 终于修没了……\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"但是桌面端……emmm 加了 touchevent 就没了桌面端的交互啊……汗，真要做好的话，事件还要先看设备再绑定，touch 和 mouse 的实现逻辑不一样。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"但但但又但是，你也不能说支持 touch 的设备就不绑定 click 事件了。因为有一种设备叫触屏笔记本。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"有人会说绑 pointer 不就好了。耐思，我本来也是这么想的，因为我最开始绑的就是pointer。直到我发现 pointerUp 在 safari 上基本是不能用的状态，cancel 和 leave 也一样，pointer 事件的触发过程远远没有 touch 事件稳定……\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","length":357},{"id":"2023-11-08 01:30:55","content":"\n#react 想要自定义 hook，但里面有依赖怎么办？react 不能检测 custom hook 的 dep 嵌套问题。\n\n看了 stackoverflow，发现确实可以解决，但写起来和有那个大病似的。\n\n```ts\n// my hook\nfunction useHotKey(command, listener, options){\n  /*do something, but how about listener contains extra deps?*/ \n}\n\nfunction useWrapper(reactHookAsDep: any){\n  useEffect(()=>{},[reactHookAsDep])\n}\n\n// in your component\nuseWrapper(\n  useMemo(() => {\n    useHotKey(command, listener, options) // execute your real custom hook\n  },[command, listener, option, extradep]) // full check for all deps\n)\n```\n\n如果不想定义wrapper，那就在组件里直接 useEffect 再 usememo ……没想到吧，dep 参数还能这么用！但依然有 warning，说 dependency 太复杂了\n\n```ts\n// in your component\nuseEffect(()={},[\n  useMemo(()=>{\n    const listener = () => { /*do something with extra deps*/ }\n    useHotKey(command, listener, options) // execute your real custom hook\n  },[command, option, extradep])\n])\n```\n\n我的评价还是有病，新人看不懂的写法类型。宁愿关 warning，发现有状态不刷新的 bug 再调都行……主要还是得靠理解和代码习惯，不然你 lint 倒是直接禁止在顶层调用参数有 function 的 usehook 啊……新人写那还不是直接用，谁会上来就知道套娃写……\n\n","tags":["react"],"imgsmd":[],"sourceFile":"002.md","csrIndex":[0,7],"code":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    p: \"p\",\n    pre: \"pre\",\n    span: \"span\",\n    ...props.components\n  }, {Tag} = _components;\n  if (!Tag) _missingMdxReference(\"Tag\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [_jsx(Tag, {\n        text: \"react \"\n      }), \"想要自定义 hook，但里面有依赖怎么办？react 不能检测 custom hook 的 dep 嵌套问题。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"看了 stackoverflow，发现确实可以解决，但写起来和有那个大病似的。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-ts\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// my hook\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"function\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"useHotKey\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"command, listener, options\"\n        }), \"){\\n  \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"/*do something, but how about listener contains extra deps?*/\"\n        }), \" \\n}\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"function\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"useWrapper\"\n        }), \"(\", _jsxs(_components.span, {\n          className: \"hljs-params\",\n          children: [\"reactHookAsDep: \", _jsx(_components.span, {\n            className: \"hljs-built_in\",\n            children: \"any\"\n          })]\n        }), \"){\\n  \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"useEffect\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-function\",\n          children: \"()=>\"\n        }), \"{},[reactHookAsDep])\\n}\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// in your component\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"useWrapper\"\n        }), \"(\\n  \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"useMemo\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-function\",\n          children: \"() =>\"\n        }), \" {\\n    \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"useHotKey\"\n        }), \"(command, listener, options) \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// execute your real custom hook\"\n        }), \"\\n  },[command, listener, option, extradep]) \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// full check for all deps\"\n        }), \"\\n)\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"如果不想定义wrapper，那就在组件里直接 useEffect 再 usememo ……没想到吧，dep 参数还能这么用！但依然有 warning，说 dependency 太复杂了\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-ts\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// in your component\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"useEffect\"\n        }), \"(()={},[\\n  \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"useMemo\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-function\",\n          children: \"()=>\"\n        }), \"{\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"listener\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") => { \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"/*do something with extra deps*/\"\n        }), \" }\\n    \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"useHotKey\"\n        }), \"(command, listener, options) \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// execute your real custom hook\"\n        }), \"\\n  },[command, option, extradep])\\n])\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"我的评价还是有病，新人看不懂的写法类型。宁愿关 warning，发现有状态不刷新的 bug 再调都行……主要还是得靠理解和代码习惯，不然你 lint 倒是直接禁止在顶层调用参数有 function 的 usehook 啊……新人写那还不是直接用，谁会上来就知道套娃写……\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","length":996},{"id":"2023-11-06 21:20:06","content":"\n这是一条有关于 #博客 图片组件的交互测试。 #漫画 \n\n测试内容是多图条漫，两条的宽度还不一样哈哈。主要就是测一个极端的比例。已经不能开 typora 了，滑不到头简直要命。我的图上传前都有压缩过，先转 webp，然后压缩 80%。如果是尺寸大一点的图可以压 90%.\n\n……safari，你可真是666，长按后图片二进制就无了……那么大一张图在那，标准的html元素，按了就无了，这要我怎么debug……还有底部占空间……我还是先以桌面端为主吧，移动端只是个顺便。\n\n还有一些问题是如果工具要做的话，交互也要一块做。放大缩小拖动边界判定。移动端禁滚动。\n\n\n","tags":["博客","漫画"],"imgsmd":["![1](https://cdn.jsdelivr.net/gh/NamiLing/upic/picgo/202311062132690.webp)","![2](https://cdn.jsdelivr.net/gh/NamiLing/upic/picgo/202311062133783.webp)"],"sourceFile":"002.md","csrIndex":[0,8],"code":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  }, {Tag} = _components;\n  if (!Tag) _missingMdxReference(\"Tag\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"这是一条有关于 \", _jsx(Tag, {\n        text: \"博客 \"\n      }), \"图片组件的交互测试。 \", _jsx(Tag, {\n        text: \"漫画\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"测试内容是多图条漫，两条的宽度还不一样哈哈。主要就是测一个极端的比例。已经不能开 typora 了，滑不到头简直要命。我的图上传前都有压缩过，先转 webp，然后压缩 80%。如果是尺寸大一点的图可以压 90%.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"……safari，你可真是666，长按后图片二进制就无了……那么大一张图在那，标准的html元素，按了就无了，这要我怎么debug……还有底部占空间……我还是先以桌面端为主吧，移动端只是个顺便。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"还有一些问题是如果工具要做的话，交互也要一块做。放大缩小拖动边界判定。移动端禁滚动。\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","length":282},{"id":"2023-11-06 19:18:22","content":"\n突然好喜欢可爱的字体哇~\n\n好想用 consolas 做 UI font，这个有点可爱气质的打字机字体竟然意外适合，找不到任何一个替代品。可惜 mono font 因为等宽空格的关系，中英混排不行。我又是一个非常喜欢在中英文之间打空格的人。最后还是折中用了万能的 IBM Plex Sans。IBM Plex Sans 正文无敌强，和中文搭配也非常好。但是写 UI 的话就显得有点挤了。\n\nUI 字体要和 正文搭起来挺难的。英文字体的搭配主要看几个基线，还有宽度和间距。基本比例一样的都行。但在不同字体间，要找比例一致字体的是一件极其困难的事，因为很容易没特色。IBM Plex Sans 和 arial 的比例就非常接近，只有宽度和风格区别。\n\n","tags":[],"imgsmd":[],"sourceFile":"002.md","csrIndex":[0,9],"code":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"突然好喜欢可爱的字体哇~\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"好想用 consolas 做 UI font，这个有点可爱气质的打字机字体竟然意外适合，找不到任何一个替代品。可惜 mono font 因为等宽空格的关系，中英混排不行。我又是一个非常喜欢在中英文之间打空格的人。最后还是折中用了万能的 IBM Plex Sans。IBM Plex Sans 正文无敌强，和中文搭配也非常好。但是写 UI 的话就显得有点挤了。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"UI 字体要和 正文搭起来挺难的。英文字体的搭配主要看几个基线，还有宽度和间距。基本比例一样的都行。但在不同字体间，要找比例一致字体的是一件极其困难的事，因为很容易没特色。IBM Plex Sans 和 arial 的比例就非常接近，只有宽度和风格区别。\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","length":325}],"info":{"pages":12,"memos":128,"tags":5,"imgs":6,"fileMap":[{"srcName":"002.md","lastModified":1699890201263,"dateRange":{"start":"2023-11-13 23:35","end":"2023-08-21 08:00"},"startAt":{"page":0,"index":0},"endAt":{"page":3,"index":3}},{"srcName":"001.md","lastModified":1699708351643,"dateRange":{"start":"2023-03-17 08:00","end":"2019-07-16 08:00"},"startAt":{"page":3,"index":4},"endAt":{"page":12,"index":6}},{"srcName":"000.md","lastModified":1699185680001,"dateRange":{"start":"1980-01-01 00:48","end":"1980-01-01 00:48"},"startAt":{"page":12,"index":7},"endAt":{"page":12,"index":7}}],"pageMap":[{"page":0,"startDate":1699889754000,"endDate":1699269502000},{"page":1,"startDate":1699189496000,"endDate":1698105600000},{"page":2,"startDate":1697068800000,"endDate":1693699200000},{"page":3,"startDate":1693526400000,"endDate":1677628800000},{"page":4,"startDate":1677110400000,"endDate":1675296000000},{"page":5,"startDate":1675036800000,"endDate":1666828800000},{"page":6,"startDate":1666137600000,"endDate":1658102400000},{"page":7,"startDate":1657065600000,"endDate":1653436800000},{"page":8,"startDate":1653350400000,"endDate":1643414400000},{"page":9,"startDate":1641686400000,"endDate":1637280000000},{"page":10,"startDate":1637020800000,"endDate":1623599999000},{"page":11,"startDate":1622592000000,"endDate":1606943150000},{"page":12,"startDate":1606751999000,"endDate":-1}]},"memotags":[{"name":"react","memoIds":["2023-11-08 01:30:55"]},{"name":"博客","memoIds":["2023-11-06 21:20:06","2023-10-29 01:13:43","1980-01-01 00:48:28"]},{"name":"漫画","memoIds":["2023-11-06 21:20:06"]},{"name":"mdx","memoIds":["2023-11-05 21:04:56"]},{"name":"工具","memoIds":["2023-11-02 22:20:54","2023-08-30"]}]},"__N_SSG":true}